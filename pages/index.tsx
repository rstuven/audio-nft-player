import type { NextPage } from "next";
import Head from "next/head";
import dynamic from "next/dynamic";
import uniqueBy from "lodash.uniqby";
import memoize from "promise-memoize";
// import styles from '../styles/Home.module.css'
import { ReactJkMusicPlayerAudioListProps } from "react-jinke-music-player";
import "react-jinke-music-player/assets/index.css";
import { Alchemy, Network, OwnedNftsResponse } from "alchemy-sdk";
import { useEffect, useState } from "react";

const getContractMetadata = memoize((contractAddress: string) => {
  return alchemy.nft.getContractMetadata(contractAddress);
});

const ReactJkMusicPlayer = dynamic(() => import("react-jinke-music-player"), {
  ssr: false,
});

const config = {
  // apiKey: "<-- ALCHEMY APP API KEY -->",
  network: Network.ETH_MAINNET,
};
const alchemy = new Alchemy(config);

const owner = "freqncy.eth";

const getAudioLists = async function* () {
  let pageKey;
  do {
    const result: OwnedNftsResponse = await alchemy.nft.getNftsForOwner(owner, {
      pageKey,
    });

    const audioList: ReactJkMusicPlayerAudioListProps[] = [];
    for (const nft of result.ownedNfts) {
      if (!nft.rawMetadata?.audio_url) continue;
      const contract = await getContractMetadata(nft.contract.address);
      const result: ReactJkMusicPlayerAudioListProps = {
        name: nft.rawMetadata?.name,
        musicSrc: nft.rawMetadata?.audio_url,
        cover: nft.rawMetadata?.image,
        singer: contract.name,
      };
      audioList.push(result);
    }
    yield audioList;
    pageKey = result.pageKey;
  } while (pageKey);
};

const Home: NextPage = () => {
  const [audioLists, setAudioLists] = useState<
    ReactJkMusicPlayerAudioListProps[]
  >([]);

  useEffect(() => {
    async function loadAudioNfts() {
      for await (const newAudioLists of getAudioLists()) {
        setAudioLists((oldAudioLists) =>
          uniqueBy(
            [...oldAudioLists, ...newAudioLists],
            (item) => item.musicSrc
          )
        );
      }
    }
    async function loadAudioNfts2() {
      setAudioLists([
        {
          name: "EulerBeats Enigma LP 18 Print",
          musicSrc: "https://media.eulerbeats.com/enigma/012e06030300.mp3",
          cover: "https://media.eulerbeats.com/enigma/012e06030300.gif",
          singer: "EulerBeats: Enigma",
          // duration: 0,
          // lyric: '',
          // [key: string]: any
        },
      ]);
    }

    loadAudioNfts().catch(console.error);
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {audioLists.length > 0 && (
        <ReactJkMusicPlayer
          audioLists={audioLists}
          theme="dark"
          mode="full"
          bounds="body"
          autoPlay={false}
          glassBg
          preload
          showPlay
          showPlayMode
          showDownload={false}
          showReload={false}
          showThemeSwitch={false}
          toggleMode={false}
        />
      )}
    </>
  );
};

export default Home;
